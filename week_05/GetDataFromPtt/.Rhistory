kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
#get key words
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(doc.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(doc.tfidf[dayMax[1:5],1]))
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(doc.tfidf)[2:(n+1)]
TopWords = droplevels(TopWords)
kable(TopWords)
freqFrame
View(TDM)
View(TopWords)
#take out
TDM$d <- as.character(TDM$d)
TDM <- TDM[nchar(TDM$d)>1,]#去除字數是1的詞
library(knitr)
kable(head(TDM))
kable(tail(TDM))
#TDM -> TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
#cleaning and add new words
d.corpus <- Corpus( DirSource("./DATA") )
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
})
d.corpus <- tm_map(d.corpus, toSpace, "　")
d.corpus <- tm_map(d.corpus, toSpace, "︳")
d.corpus <- tm_map(d.corpus, toSpace, "・")
d.corpus <- tm_map(d.corpus, toSpace, "ー")
d.corpus <- tm_map(d.corpus, toSpace, "啊")
d.corpus <- tm_map(d.corpus, toSpace, "欸")
d.corpus <- tm_map(d.corpus, toSpace, "吧")
d.corpus <- tm_map(d.corpus, toSpace, "板")
d.corpus <- tm_map(d.corpus, toSpace, "版")
d.corpus <- tm_map(d.corpus, toSpace, "標題")
d.corpus <- tm_map(d.corpus, toSpace, "編輯")
d.corpus <- tm_map(d.corpus, toSpace, "發信站")
d.corpus <- tm_map(d.corpus, toSpace, "批踢踢實業坊")
d.corpus <- tm_map(d.corpus, toSpace, "文章")
d.corpus <- tm_map(d.corpus, toSpace, "pttcc")
d.corpus <- tm_map(d.corpus, toSpace, "CChat")
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
mixseg = worker()
new_user_word(mixseg,'哥布林',"n")
new_user_word(mixseg,'哥殺',"n")
new_user_word(mixseg,'哥布林殺手',"n")
new_user_word(mixseg,'魔禁',"n")
new_user_word(mixseg,'魔法禁書目錄',"n")
new_user_word(mixseg,'提拉米斯',"n")
new_user_word(mixseg,'魔導少年',"n")
new_user_word(mixseg,'妖尾',"n")
new_user_word(mixseg,'妖精的尾巴',"n")
new_user_word(mixseg,'電光超人',"n")
new_user_word(mixseg,'繽紛世界',"n")
new_user_word(mixseg,'青春豬頭少年',"n")
new_user_word(mixseg,'終將成為妳',"n")
new_user_word(mixseg,'莉茲與青鳥',"n")
new_user_word(mixseg,'逆轉裁判',"n")
new_user_word(mixseg,'弦音',"n")
new_user_word(mixseg,'佐賀偶像',"n")
new_user_word(mixseg,'莉茲與青鳥',"n")
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
n = length(seg)
TDM = tokens[[1]]
View(TDM)
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
#take out
TDM$d <- as.character(TDM$d)
mode(TDM)
TDM$d
nchar(TDM$d) > 1
TDM <- TDM[nchar(TDM$d)>1,]#去除字數是1的詞
library(knitr)
kable(head(TDM))
kable(tail(TDM))
#TDM -> TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
View(doc.tfidf)
kable(tail(doc.tfidf[delID,1]))
kable(head(doc.tfidf[delID,1]))
#get key words
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(doc.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(doc.tfidf[dayMax[1:5],1]))
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(doc.tfidf)[2:(n+1)]
TopWords = droplevels(TopWords)
kable(TopWords)
View(TopWords)
View(TDM)
mode(TopWords)
TopWords <- TopWords[1:9,]
#cleaning and add new words
d.corpus <- Corpus( DirSource("./DATA") )
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
})
d.corpus <- tm_map(d.corpus, toSpace, "　")
d.corpus <- tm_map(d.corpus, toSpace, "︳")
d.corpus <- tm_map(d.corpus, toSpace, "・")
d.corpus <- tm_map(d.corpus, toSpace, "ー")
d.corpus <- tm_map(d.corpus, toSpace, "小說")
d.corpus <- tm_map(d.corpus, toSpace, "覺得")
d.corpus <- tm_map(d.corpus, toSpace, "可以")
d.corpus <- tm_map(d.corpus, toSpace, "沒有")
d.corpus <- tm_map(d.corpus, toSpace, "就是")
d.corpus <- tm_map(d.corpus, toSpace, "標題")
d.corpus <- tm_map(d.corpus, toSpace, "編輯")
d.corpus <- tm_map(d.corpus, toSpace, "發信站")
d.corpus <- tm_map(d.corpus, toSpace, "批踢踢實業坊")
d.corpus <- tm_map(d.corpus, toSpace, "文章")
d.corpus <- tm_map(d.corpus, toSpace, "pttcc")
d.corpus <- tm_map(d.corpus, toSpace, "CChat")
d.corpus <- tm_map(d.corpus, toSpace, "enfis")
d.corpus <- tm_map(d.corpus, toSpace, "Wed")
d.corpus <- tm_map(d.corpus, toSpace, "Thu")
d.corpus <- tm_map(d.corpus, toSpace, "Fri")
d.corpus <- tm_map(d.corpus, toSpace, "Sat")
d.corpus <- tm_map(d.corpus, toSpace, "Sun")
d.corpus <- tm_map(d.corpus, toSpace, "Mon")
d.corpus <- tm_map(d.corpus, toSpace, "Tue")
d.corpus <- tm_map(d.corpus, toSpace, "Wed")
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
mixseg = worker()
new_user_word(mixseg,'哥布林',"n")
new_user_word(mixseg,'哥殺',"n")
new_user_word(mixseg,'哥布林殺手',"n")
new_user_word(mixseg,'魔禁',"n")
new_user_word(mixseg,'魔法禁書目錄',"n")
new_user_word(mixseg,'提拉米斯',"n")
new_user_word(mixseg,'魔導少年',"n")
new_user_word(mixseg,'妖尾',"n")
new_user_word(mixseg,'妖精的尾巴',"n")
new_user_word(mixseg,'電光超人',"n")
new_user_word(mixseg,'繽紛世界',"n")
new_user_word(mixseg,'青春豬頭少年',"n")
new_user_word(mixseg,'終將成為妳',"n")
new_user_word(mixseg,'莉茲與青鳥',"n")
new_user_word(mixseg,'逆轉裁判',"n")
new_user_word(mixseg,'弦音',"n")
new_user_word(mixseg,'佐賀偶像',"n")
new_user_word(mixseg,'莉茲與青鳥',"n")
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
n = length(seg)
TDM = tokens[[1]]
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
#take out
TDM$d <- as.character(TDM$d)
TDM <- TDM[nchar(TDM$d)>1,]#去除字數是1的詞
library(knitr)
kable(head(TDM))
kable(tail(TDM))
#TDM -> TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
#get key words
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(doc.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(doc.tfidf[dayMax[1:5],1]))
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(doc.tfidf)[2:(n+1)]
TopWords <- TopWords[1:9,]
TopWords = droplevels(TopWords)
kable(TopWords)
View(TDM)
View(TopWords)
source('~/.active-rstudio-document', echo=TRUE)
#
AllTop = as.data.frame( table(as.matrix(TopWords)) )
AllTop = AllTop[order(AllTop$Freq, decreasing = TRUE),]
kable(head(AllTop))
TopNo = 5
tempGraph = data.frame()
for( t in c(1:TopNo) )
{
word = matrix( rep(c(as.matrix(AllTop$Var1[t])), each = n), nrow = n )
temp = cbind( colnames(doc.tfidf)[2:(n+1)], t(TDM[which(TDM$d == AllTop$Var1[t]), 2:(n+1)]), word )
colnames(temp) = c("date", "freq", "words")
tempGraph = rbind(tempGraph, temp)
names(tempGraph) = c("date", "freq", "words")
}
library(ggplot2)
library(varhandle)
tempGraph$freq = unfactor(tempGraph$freq)
install.packages("varhandle")
library(varhandle)
tempGraph$freq = unfactor(tempGraph$freq)
ggplot(tempGraph, aes(hour, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words))
ggplot(tempGraph, aes(date, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words))
par(family=("Heiti TC Light"))
ggplot(tempGraph, aes(date, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words))
ggplot(tempGraph, aes(date, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(TDM)
TDM.test <- TDM[,1:10]
View(TDM.test)
TDM <- TDM[,1:10]
TopNo = 5
tempGraph = data.frame()
for( t in c(1:TopNo) )
{
word = matrix( rep(c(as.matrix(AllTop$Var1[t])), each = n), nrow = n )
temp = cbind( colnames(doc.tfidf)[2:(n+1)], t(TDM[which(TDM$d == AllTop$Var1[t]), 2:(n+1)]), word )
colnames(temp) = c("date", "freq", "words")
tempGraph = rbind(tempGraph, temp)
names(tempGraph) = c("date", "freq", "words")
}
TopNo = 5
tempGraph = data.frame()
for( t in c(1:TopNo) )
{
word = matrix( rep(c(as.matrix(AllTop$Var1[t])), each = n), nrow = n )
temp = cbind( colnames(doc.tfidf)[2:(n+1)], t(TDM[which(TDM$d == AllTop$Var1[t]), 2:(n+1)]), word )
colnames(temp) = c("date", "freq", "words")
tempGraph = rbind(tempGraph, temp)
names(tempGraph) = c("date", "freq", "words")
}
library(knitr)
kable(head(TDM))
kable(tail(TDM))
#TDM -> TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
#get key words
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(doc.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(doc.tfidf[dayMax[1:5],1]))
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(doc.tfidf)[2:(n+1)]
TopWords <- TopWords[1:9,]
TopWords = droplevels(TopWords)
kable(TopWords)
#
AllTop = as.data.frame( table(as.matrix(TopWords)) )
AllTop = AllTop[order(AllTop$Freq, decreasing = TRUE),]
kable(head(AllTop))
TopNo = 5
tempGraph = data.frame()
for( t in c(1:TopNo) )
{
word = matrix( rep(c(as.matrix(AllTop$Var1[t])), each = n), nrow = n )
temp = cbind( colnames(doc.tfidf)[2:(n+1)], t(TDM[which(TDM$d == AllTop$Var1[t]), 2:(n+1)]), word )
colnames(temp) = c("date", "freq", "words")
tempGraph = rbind(tempGraph, temp)
names(tempGraph) = c("date", "freq", "words")
}
library(ggplot2)
library(varhandle)
tempGraph$freq = unfactor(tempGraph$freq)
par(family=("Heiti TC Light"))
ggplot(tempGraph, aes(date, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
kable(tail(AllTop))
tempGraph = data.frame()
for( t in c(1:TopNo) )
{
word = matrix( rep(c(as.matrix(AllTop$Var1[t])), each = n), nrow = n )
temp = cbind( colnames(doc.tfidf)[2:(n+1)], t(TDM[which(TDM$d == AllTop$Var1[t]), 2:(n+1)]), word )
colnames(temp) = c("date", "freq", "words")
tempGraph = rbind(tempGraph, temp)
names(tempGraph) = c("date", "freq", "words")
}
TDM$d
View(AllTop)
n
View(seg)
mode(seg)
seg[[1]]
"NA" %in% seg$name
seg$name
seg
seg[[1]]
seg[[2]]
seg <- seg[[1:9]]
seg <- seg[[1:9]]
n = 9
TDM = tokens[[1]]
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
#take out
TDM$d <- as.character(TDM$d)
TDM <- TDM[nchar(TDM$d)>1,]#去除字數是1的詞
TDM <- TDM[,1:10]#去除奇怪的檔案
library(knitr)
kable(head(TDM))
kable(tail(TDM))
#TDM -> TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
kable(head(doc.tfidf[delID,1]))
kable(tail(doc.tfidf[delID,1]))
TDM = TDM[-delID,]
doc.tfidf = doc.tfidf[-delID,]
#get key words
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(doc.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(doc.tfidf[dayMax[1:5],1]))
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(doc.tfidf)[2:(n+1)]
TopWords <- TopWords[1:9,]
TopWords = droplevels(TopWords)
kable(TopWords)
#
AllTop = as.data.frame( table(as.matrix(TopWords)) )
AllTop = AllTop[order(AllTop$Freq, decreasing = TRUE),]
kable(head(AllTop))
TopNo = 5
tempGraph = data.frame()
for( t in c(1:TopNo) )
{
word = matrix( rep(c(as.matrix(AllTop$Var1[t])), each = n), nrow = n )
temp = cbind( colnames(doc.tfidf)[2:(n+1)], t(TDM[which(TDM$d == AllTop$Var1[t]), 2:(n+1)]), word )
colnames(temp) = c("date", "freq", "words")
tempGraph = rbind(tempGraph, temp)
names(tempGraph) = c("date", "freq", "words")
}
library(ggplot2)
library(varhandle)
tempGraph$freq = unfactor(tempGraph$freq)
par(family=("Heiti TC Light"))
ggplot(tempGraph, aes(date, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(TopWords)
source('~/.active-rstudio-document', echo=TRUE)
n <- 9
for( t in c(1:TopNo) )
{
word = matrix( rep(c(as.matrix(AllTop$Var1[t])), each = n), nrow = n )
temp = cbind( colnames(doc.tfidf)[2:(n+1)], t(TDM[which(TDM$d == AllTop$Var1[t]), 2:(n+1)]), word )
colnames(temp) = c("date", "freq", "words")
tempGraph = rbind(tempGraph, temp)
names(tempGraph) = c("date", "freq", "words")
}
library(ggplot2)
library(varhandle)
tempGraph$freq = unfactor(tempGraph$freq)
par(family=("Heiti TC Light"))
mode(tempGraph$freq)
ggplot(tempGraph, aes(date, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(TopWords)
source('~/.active-rstudio-document', echo=TRUE)
View(TopWords)
#發文量與時間
filenames = as.array(paste0("./DATA/",colnames(doc.tfidf)[2:(n+1)],".txt"))
sizeResult = apply(filenames, 1, file.size) / 1024
showSize = data.frame(colnames(doc.tfidf)[2:(n+1)], sizeResult)
names(showSize) = c("date", "size_KB")
ggplot(showSize, aes(x = date, y = size_KB)) + geom_bar(stat="identity")
showSize = data.frame(colnames(doc.tfidf)[2:(n+1)], sizeResult)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(showSize, aes(x = date, y = size_KB)) + geom_bar(stat="identity")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(tempGraph, aes(date, freq)) +
geom_point(aes(color = words, shape = words), size = 5) +
geom_line(aes(group = words, linetype = words)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(tempGraph)
View(TopWords)
View(TopWords)
View(tokens)
View(tempY)
View(tempGraph)
View(TopWords)
kable(TopWords)
ggplot(showSize, aes(x = date, y = size_KB)) + geom_bar(stat="identity")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
